declare name        "Spherical Harmonics library";
declare version     "1.0";
declare author      "Pierre Lecomte";
declare license     "GPL";
declare copyright   "(c) Pierre Lecomte 2016"; 

// Description: Library of N3D spherical harmonics [1] up to order 5 + extra manipulation functions.
// ACN numbering [2], i.e ACN=m^2+n+sigma*1 when spherical harmonics with 3 subscripts, ACN=m^2+n when 2 subscripts are used
// Spherical coordinates as in [3]
// Definition according to [4]

// References: 
// [1] Daniel, J. (2000). Représentation de champs acoustiques, application à la transmission et à la reproduction de scènes sonores complexes dans un contexte multimédia. Université Paris 6, Paris, France.
// [2] Nachbar, C., Zotter, F., Deleflie, E., & Sontacchi, A. (2011). Ambix - A suggested ambisonics format. In Ambisonics Symposium, Lexington.
// [3] Lecomte, P., Gauthier, P.-A., Langrenne, C., Garcia, A., & Berry, A. (2015). On the use of a Lebedev grid for Ambisonics. In Audio Engineering Society Convention 139. New York.
// [4] http://ambisonics.ch/standards/channels/

import("math.lib");

// ORDER 0
n3d(0,0)=1;

Legendre(0,0,d)=1;

LegendreP0(x) = 1;

// ORDER 1
n3d(1,1) = sqrt(3);
  n3d(1,0) = sqrt(3);

Legendre(1,1,d) = cos(d);
  Legendre(1,0,d)= sin(d);

LegendreP1(x) = 3*x;

// ORDER 2
n3d(2,2) = sqrt(15)/2;
  n3d(2,1) = sqrt(15)/2;
    n3d(2,0) = sqrt(5)/2;
    
Legendre(2,2,d) = cos(d)^2;
  Legendre(2,1,d) = sin(2*d);
   Legendre(2,0,d) = 3*sin(d)^2-1;

LegendreP2(x) = 2.5*(-1 + 3*x^2);

// ORDER 3
n3d(3,3) = sqrt(35/8);
  n3d(3,2) = sqrt(105)/2;
    n3d(3,1) = sqrt(21/8);
      n3d(3,0) = sqrt(7)/2;
      
Legendre(3,3,d) = cos(d)^3;
  Legendre(3,2,d) = sin(d)*cos(d)^2;
    Legendre(3,1,d) = cos(d)*(5*sin(d)^2-1);
      Legendre(3,0,d) = sin(d)*(5*sin(d)^2-3);
      
LegendreP3(x) = 3.5*(-3*x + 5*x^3);

// ORDER 4
n3d(4,4) = (3/8)*sqrt(35);
  n3d(4,3) = (3/2)*sqrt(35/2);
    n3d(4,2)= (3/4)*sqrt(5);
      n3d(4,1) = (3/4)*sqrt(5/2);
	n3d(4,0) = (3/8);

Legendre(4,4,d) = cos(d)^4;
  Legendre(4,3,d) = sin(d)*cos(d)^3;
    Legendre(4,2,d) = (7*sin(d)^2-1)*cos(d)^2;
      Legendre(4,1,d) = sin(2*d)*(7*sin(d)^2 -3);
	Legendre(4,0,d) = 35*sin(d)^4-30*sin(d)^2+3;

LegendreP4(x) = 1.125*(3-30*x^2+35*x^4);

// ORDER 5
n3d(5,5) = (3/8)*sqrt(77/2);
  n3d(5,4) = (3/8)*sqrt(385);
    n3d(5,3) = sqrt(385/2)/8;
      n3d(5,2) = sqrt(1155)/4;
	n3d(5,1) = sqrt(165)/8;
	  n3d(5,0) = sqrt(11)/8;

Legendre(5,5,d) = cos(d)^5;
  Legendre(5,4,d) = sin(d)*cos(d)^4;
    Legendre(5,3,d) = (9*sin(d)^2-1)*cos(d)^3;
      Legendre(5,2,d) = sin(d)*(3*sin(d)^2-1)*cos(d)^2;
	Legendre(5,1,d) = (21*sin(d)^4 - 14*sin(d)^2 + 1)*cos(d);
	  Legendre(5,0,d) = 63*sin(d)^5 - 70*sin(d)^3 + 15*sin(d);
      
LegendreP5(x)=1.375*(15*x-70*x^3+63*x^5);

// DEFINITION WITH 2 SUBSCRIPTS (m,n)
ymn(m,0,t,d)=n3d(m,0)*Legendre(m,0,d); // first case if n=0,
ymn(m,n,t,d)=n3d(m,abs(n))*Legendre(m,abs(n),d)*
		(
		cos(abs(n)*t)*(abs(n)/n==1) 
		+
		sin(abs(n)*t)*(abs(n)/n==-1)
		);

// DEFINITION WITH 1 SUBSCRIPT ACN
acn(m,n)=m^2+m+n;

yacn(i,t,d) = ymn(m,n,t,d) with 
	  {
		m = int(sqrt(i));
		n = int(i - m^2 -m);
	  };


// BUS WITH GAIN
buswg(c) = R(c) with {
  R((c,cl)) = R(c),R(cl);
  R(1)      = _;
  //R(0)      = !;
  R(0)      = !:0; // if you need to preserve the number of outputs
  R(float(0)) = R(0);
  R(float(1)) = R(1);
  R(c)      = *(c);
};

// VECTOR OF SPHERICAL HARMONICS : SIGNAL MULTIPLIED BY SPHERICAL HARMONICS
yvec(i,t,d) = par(j,i,_*yacn(j,t,d));

// GAMMA ANGLE BETWEEN VIRTUAL SOURCE (T1,D1) AND SPEAKER (T2,D2)
angle(t1,d1,t2,d2) = cos(d1)*cos(d2)*cos(t1-t2)+sin(d1)*sin(d2);